# microservice specific routes

GET        /:draftId/start                              controllers.IndexController.onPageLoad(draftId: String)

GET        /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                              controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /this-service-has-been-reset                 controllers.SessionExpiredController.onPageLoad

GET        /unauthorised                                controllers.UnauthorisedController.onPageLoad

GET        /logout                                      controllers.register.LogoutController.logout()

GET        /keep-alive                                  controllers.SessionTimeoutController.keepAlive
GET        /timeout                                     controllers.SessionTimeoutController.timeout

GET        /feature-not-available                       controllers.FeatureNotAvailableController.onPageLoad()

->         /business                                    businessProtector.Routes
->         /individual                                  individualProtector.Routes

GET        /:draftId/add                                controllers.register.AddAProtectorController.onPageLoad(draftId: String)
POST       /:draftId/add                                controllers.register.AddAProtectorController.submitOne(draftId: String)
POST       /:draftId/add-another                        controllers.register.AddAProtectorController.submitAnother(draftId: String)
POST       /complete                                    controllers.register.AddAProtectorController.submitComplete(draftId: String)

GET        /:draftId/individual-or-business             controllers.register.IndividualOrBusinessController.onPageLoad(draftId: String)
POST       /:draftId/individual-or-business             controllers.register.IndividualOrBusinessController.onSubmit(draftId: String)

GET        /:draftId/information-you-need               controllers.register.InfoController.onPageLoad(draftId: String)

GET        /:draftId/has-protectors                     controllers.register.TrustHasProtectorYesNoController.onPageLoad(draftId: String)
POST       /:draftId/has-protectors                     controllers.register.TrustHasProtectorYesNoController.onSubmit(draftId: String)
